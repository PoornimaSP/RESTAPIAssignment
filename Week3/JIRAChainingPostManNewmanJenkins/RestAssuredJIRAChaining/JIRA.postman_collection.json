{
	"info": {
		"_postman_id": "829bc58d-5eca-4dc7-9620-69c53dc2407b",
		"name": "JIRA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23815178"
	},
	"item": [
		{
			"name": "SearchJIRAIssues",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{JIRABaseURI}}/{{collectionvar}}/search?jql=project=\"OC\"",
					"host": [
						"{{JIRABaseURI}}"
					],
					"path": [
						"{{collectionvar}}",
						"search"
					],
					"query": [
						{
							"key": "jql",
							"value": "project=\"OC\""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ListAllIssueTypes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{JIRABaseURI}}/{{collectionvar}}/issuetype",
					"host": [
						"{{JIRABaseURI}}"
					],
					"path": [
						"{{collectionvar}}",
						"issuetype"
					]
				}
			},
			"response": []
		},
		{
			"name": "IssuesunderID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{JIRABaseURI}}/{{collectionvar}}/issue/10004",
					"host": [
						"{{JIRABaseURI}}"
					],
					"path": [
						"{{collectionvar}}",
						"issue",
						"10004"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateIssues",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function(){\r",
							"pm.response.to.have.status(201);\r",
							"});resp=pm.response.json();\r",
							"ID=resp.id;\r",
							"KEY=resp.key;\r",
							"pm.globals.set(\"GlobalID\",ID);\r",
							"pm.globals.set(\"GlobalKEY\",KEY);\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fields\": {\r\n        \"project\": {\r\n            \"key\": \"{{Key}}\"\r\n        },\r\n        \"summary\": \"{{summary}}\",\r\n        \"description\": \"Creating of an issue using project keys and issue type names using the REST API\",\r\n        \"issuetype\": {\r\n            \"name\": \"Bug\"\r\n        }\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{JIRABaseURI}}/{{collectionvar}}/issue",
					"host": [
						"{{JIRABaseURI}}"
					],
					"path": [
						"{{collectionvar}}",
						"issue"
					]
				}
			},
			"response": []
		},
		{
			"name": "SearchIssueBasedOnID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{JIRABaseURI}}/{{collectionvar}}/issue/{{GlobalID}}",
					"host": [
						"{{JIRABaseURI}}"
					],
					"path": [
						"{{collectionvar}}",
						"issue",
						"{{GlobalID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "SearchIssueBasedOnKey",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{JIRABaseURI}}/{{collectionvar}}/issue/{{GlobalKEY}}",
					"host": [
						"{{JIRABaseURI}}"
					],
					"path": [
						"{{collectionvar}}",
						"issue",
						"{{GlobalKEY}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "EditIssueInJIRA",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function(){\r",
							"pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"fields\": {\r\n\t\t\"summary\": \"updated issue in OC project\",\r\n\t\t\"description\": \"Updated Issue's description in OC project\"\r\n\t}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{JIRABaseURI}}/{{collectionvar}}/issue/{{GlobalID}}",
					"host": [
						"{{JIRABaseURI}}"
					],
					"path": [
						"{{collectionvar}}",
						"issue",
						"{{GlobalID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteIssuewithKEY",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{JIRABaseURI}}/{{collectionvar}}/issue/{{GlobalKEY}}",
					"host": [
						"{{JIRABaseURI}}"
					],
					"path": [
						"{{collectionvar}}",
						"issue",
						"{{GlobalKEY}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "shzZzlBP3Ij1MRU0LPWW6ECF",
				"type": "string"
			},
			{
				"key": "username",
				"value": "hari.radhakrishnan@testleaf.com",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "collectionvar",
			"value": "rest/api/2",
			"type": "string"
		}
	]
}